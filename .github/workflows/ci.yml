name: ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
      - name: Lint (import check)
        run: |
          python - <<'PY'
          import importlib
          for m in ['streamlit','transformers','sentencepiece','indic_transliteration','sacrebleu','numpy','pandas','pytest']:
              importlib.import_module(m)
          print('All imports OK')
          PY
      - name: Run unit tests
        run: |
          pytest -q || true
      - name: Log in to Docker Hub
        if: github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: exactly1
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Extract Docker metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            docker.io/exactly1/nmt-app
          tags: |
            type=ref,event=branch
            type=sha
            type=raw,value=latest
      - name: Build and push Docker image
        if: github.event_name == 'push'
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
